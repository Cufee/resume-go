package internal

import (
	"fmt"
	"strings"
	"time"
)

func filename(title string) string {
	t := time.Now()
	return fmt.Sprintf("%s_%s_%v.pdf", strings.ReplaceAll(title, " ", "_"), t.Month().String()[:3], t.Year()%2000)
}

templ Index(data Resume) {
	<!DOCTYPE html>
	<html data-theme="light">
		<head>
			<title>{ data.Header.Title.String() } - Resume</title>
			<meta charset="utf-8"/>
			<meta name="color-scheme" content="light"/>
			<meta name="viewport" content="width=device-width, initial-scale=1"/>
			<meta property="og:type" content="website"/>
			<meta property="og:title" content={ data.Header.Title.String() }/>
			<meta property="og:description" content={ data.Header.Subtitle.String() }/>
			<meta name="twitter:card" content="summary_large_image"/>
			<meta name="twitter:title" content={ data.Header.Title.String() }/>
			// <meta name="twitter:image" content={ constants.FrontendURL + "/assets/og/default.jpg" }/>
			<meta name="twitter:description" content={ data.Header.Subtitle.String() }/>
			<link href="/main.css" rel="stylesheet" type="text/css"/>
			<link rel="icon" href="/favicon.svg"/>
		</head>
		<body class="flex flex-col justify-center w-screen">
			<a id="download" href="resume.pdf" download={ filename(data.Header.Title.String()) } class="sticky top-0 flex items-center justify-between w-full gap-2 p-2 transition-all duration-500 opacity-80 print:hidden bg-neutral hover:opacity-100 text-neutral-content">
				<span class="size-6">
					@downloadIcon()
				</span>
				<span class="text-xl">Download as PDF</span>
				<div class="w-6"></div>
			</a>
			<div class="flex flex-col justify-center max-w-5xl gap-4 p-8 m-auto text-lg print:max-w-fit forced-color-adjust-none print:p-0">
				@header(data.Header)
				@summary(data.Content.Summary)
				@skills(data.Sidebar)
				@experience(data.Content)
				@projects(data.Sidebar)
			</div>
		</body>
	</html>
}

templ header(data Header) {
	<div class="grid items-center justify-center gap-2 sm:grid-cols-3 sm:items-start">
		<div class="flex flex-col">
			<span class="text-lg/5">
				@data.Email
			</span>
		</div>
		<div class="flex flex-col items-center">
			<span class="font-bold text-2xl/6">
				@data.Title
			</span>
			<span class="text-lg/6">
				@data.Subtitle
			</span>
		</div>
		<div class="flex flex-col text-lg/5">
			<div class="flex gap-1">
				<div class="grow text-end">linkedin:</div>
				<div class="w-16 text-start">
					@data.LinkedIn
				</div>
			</div>
			<div class="flex gap-1">
				<div class="grow text-end">github:</div>
				<div class="w-16 text-start">
					@data.GitHub
				</div>
			</div>
		</div>
	</div>
}

templ hr(label string) {
	<div>
		if label != "" {
			<span class="text-xl font-bold">{ label }</span>
		}
		<hr class="w-full h-0.5 rounded-full bg-black"/>
	</div>
}

templ summary(text Text) {
	<div class="flex flex-col gap-2">
		@hr("Summary")
		<span>
			@text
		</span>
	</div>
}

templ experience(data Content) {
	<div class="flex flex-col gap-4">
		@hr("Experience")
		<div class="flex flex-col gap-4">
			for _, data := range data.Positions {
				@position(data)
			}
		</div>
	</div>
}

templ position(data Position) {
	<div class="flex flex-col items-start gap-2">
		<div class="flex flex-col w-full">
			<div class="grid items-end grid-cols-1 gap-1 sm:grid-cols-3">
				<span class="text-xl font-bold">{ data.Company }</span>
				<div class="flex flex-col sm:items-center">
					<span class="text-2xl font-bold sm:text-center">
						@data.Title
					</span>
					<span class="text-lg">{ strings.Join(data.Technologies, ", ") }</span>
				</div>
				<div class="flex flex-row gap-1 sm:justify-end">
					<span class="text-xl font-bold text-center">
						@data.StartedOn
					</span>
					if string(data.FinishedOn) != "" {
						<span class="text-xl font-bold text-center">-</span>
						<span class="text-xl font-bold text-center">
							@data.FinishedOn
						</span>
					}
				</div>
			</div>
		</div>
		<ol class="flex flex-col list-disc">
			for _, bullet := range data.Bullets {
				<li class="ml-6 marker:text-neutral">
					<span>
						@bullet
					</span>
				</li>
			}
		</ol>
	</div>
}

templ projects(data Sidebar) {
	<div class="flex flex-col gap-4">
		@hr("Projects")
		<div class="flex flex-col gap-4">
			for _, proj := range data.Projects {
				@project(proj)
			}
		</div>
	</div>
}

templ skills(data Sidebar) {
	<div class="flex flex-col gap-2 grow">
		@hr("Skills")
		<ol class="flex flex-col ml-6 list-disc">
			for _, group := range data.Skills {
				<li class="text-nowrap break-keep whitespace-nowrap">{ strings.Join(group, ", ") }</li>
			}
		</ol>
	</div>
}

templ project(data Project) {
	<div class="flex flex-col">
		<div class="flex flex-col justify-end">
			<div class="flex flex-col items-start">
				<div class="flex flex-row items-center justify-between w-full">
					<span class="text-xl font-bold">
						@data.Title
					</span>
				</div>
				if data.Link != "" {
					<span class="italic">{ data.Link }</span>
				}
			</div>
		</div>
		<ol class="flex flex-col list-disc">
			for _, bullet := range data.Bullets {
				<li class="ml-6 marker:text-neutral">
					<span>
						@bullet
					</span>
				</li>
			}
		</ol>
	</div>
}

templ downloadIcon() {
	<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
		<path stroke-linecap="round" stroke-linejoin="round" d="m9 13.5 3 3m0 0 3-3m-3 3v-6m1.06-4.19-2.12-2.12a1.5 1.5 0 0 0-1.061-.44H4.5A2.25 2.25 0 0 0 2.25 6v12a2.25 2.25 0 0 0 2.25 2.25h15A2.25 2.25 0 0 0 21.75 18V9a2.25 2.25 0 0 0-2.25-2.25h-5.379a1.5 1.5 0 0 1-1.06-.44Z"></path>
	</svg>
}
